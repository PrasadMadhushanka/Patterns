public class AdapterPatternDemo {

    // Target Interface
    public interface MediaPlayer {
        void play(String audioType, String fileName);
    }

    // Adaptee Class
    public static class VideoPlayer {
        public void playVideo(String fileName) {
            System.out.println("Playing video. Name: " + fileName);
        }
    }

    // Adapter Class
    public static class MediaAdapter implements MediaPlayer {

        private VideoPlayer videoPlayer;

        public MediaAdapter(String audioType) {
            if (audioType.equalsIgnoreCase("vlc") || audioType.equalsIgnoreCase("mp4")) {
                videoPlayer = new VideoPlayer();
            }
        }

        @Override
        public void play(String audioType, String fileName) {
            if (audioType.equalsIgnoreCase("vlc") || audioType.equalsIgnoreCase("mp4")) {
                videoPlayer.playVideo(fileName);
            } else {
                System.out.println("Invalid media. " + audioType + " format not supported");
            }
        }
    }

    // Concrete Class Implementing MediaPlayer Interface
    public static class AudioPlayer implements MediaPlayer {

        MediaAdapter mediaAdapter;

        @Override
        public void play(String audioType, String fileName) {
            // Playing audio file directly
            if (audioType.equalsIgnoreCase("mp3")) {
                System.out.println("Playing mp3 file. Name: " + fileName);
            }
            // Using the adapter for other file formats
            else if (audioType.equalsIgnoreCase("vlc") || audioType.equalsIgnoreCase("mp4")) {
                mediaAdapter = new MediaAdapter(audioType);
                mediaAdapter.play(audioType, fileName);
            } else {
                System.out.println("Invalid media. " + audioType + " format not supported");
            }
        }
    }

    // Main method to demonstrate the Adapter Pattern
    public static void main(String[] args) {
        AudioPlayer audioPlayer = new AudioPlayer();

        audioPlayer.play("mp3", "beyond_the_horizon.mp3");
        audioPlayer.play("mp4", "alone.mp4");
        audioPlayer.play("vlc", "far_far_away.vlc");
        audioPlayer.play("avi", "mind_me.avi");
    }
}
